###############################################################################
#                                                                             #
# Copyright 2023-2025 Thomas Bernard (https://github.com/TomfromBerlin)       #
#                                                                             #
# Permission is hereby granted, free of charge, to any person obtaining a copy#
# of this software and associated documentation files (the “Software”), to    #
# deal in the Software without restriction, including without limitation the  #
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or #
# sell copies of the Software, and to permit persons to whom the Software is  #
# furnished to do so, subject to the following conditions:                    #
#                                                                             #
# The above copyright notice and this permission notice shall be included in  #
# all copies or substantial portions of the Software.                         #
#                                                                             #
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  #
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,    #
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE #
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER      #
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     #
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS#
# IN THE SOFTWARE.                                                            #
#                                                                             #
###############################################################################
#                                                                             #
#          Usage: Source the file from or paste this code into                #
#                 your .bashrc or .zshrc                                      #
#                                                                             #
###############################################################################
#                                                                             #
#         Everything below this line comes without any waranty.               #
#                Use these files at your own risk!                            #
#                                                                             #
#                     http://github.com/TomfromBerlin                         #
#                                                                             #
###############################################################################
#                                                                             #
#                                 Warning:                                    #
#               This script works perfectly on my machine.                    #
#               If it works on yours, that's your problem.                    #
#                                                                             #
###############################################################################
_cnf_core() {
  local cmd="$1"
  local RED=$'\e[31;40m'
  local GREEN=$'\e[32;40m'
  local YELLOW=$'\e[33;40m'
  local BLUE=$'\e[34m'
  local NC=$'\e[0m'

  # Arch based distributions → pacman + pkgfile
  if command -v pacman >/dev/null 2>&1; then
    if command -v pkgfile >/dev/null 2>&1; then
      local pkgs
      pkgs=$(pkgfile -b -v -- "$cmd" 2>/dev/null)
      local pkgpath binpath
      IFS=$'\t' read -r pkgpath binpath < <(pkgfile -b -v -- "$cmd" 2>/dev/null)
      if [[ -n "$pkgs" ]]; then
        printf '%s\n' "The command ""${YELLOW}${cmd}${NC}"" is not installed."
        printf '%s%s%s%s%s\n' \
              "${YELLOW}${cmd}" "${NC} is found in " \
              "${GREEN}${pkgpath}${NC}" " and will be installed in " \
              "${GREEN}${binpath}${NC}"

        if read -rq "choice? Install it now? (y/N) "; then
          echo
          sudo pacman -S --noconfirm --color auto "$pkgs"
          return $?
        else
          echo
        fi
      else
        printf '%s'"${RED}zsh/bash: command not found: " "$cmd" >&2 "${NC}"
      fi
    else
      printf '%s' "${BLUE}pkgfile ${RED}not installed.""${NC}" " Try: sudo pacman -S pkgfile" >&2
    fi
    return 127
  fi

  # Debian/Ubuntu → apt + command-not-found
  if command -v apt >/dev/null 2>&1; then
    if [[ -x /usr/lib/command-not-found ]]; then
      /usr/lib/command-not-found -- "$cmd"
      return $?
    else
      printf '%s\n' "The command ""${YELLOW}${cmd}${NC}"" is not installed." "$cmd" >&2
      if read -rq "choice? Install it now? (y/N) "; then
      echo
      sudo apt-get install -y "$pkgs"
      return $?
      else
      printf '%s\n' "Tip: sudo apt install" "$pkgs" >&2
      fi
    fi
    return 127
  fi

  # Fallback (unknown distribution)
  printf 'command not found: %s\n' "$cmd" >&2
  return 127
}

# Zsh Hook
if [ -n "$ZSH_NAME" ]; then
  command_not_found_handler() {
    _cnf_core "$@"
  }
fi

# Bash Hook
if [ -n "$BASH" ]; then
  command_not_found_handle() {
    _cnf_core "$@"
  }
fi

## Fish Hook
# if [ -n "$FISH_VERSION" ]; then
# fish_command_not_found
#    _cnf_core "$argv" # This is Fish syntax. You don't need to declare “$argv” because Fish understands it. However, Bash and ZSH don't understand this and will throw a parser error, so it's commented out.
#  end
# fi
